//
//  ProblemView.swift
//  Clarity
//
//  Created by user941803 on 5/6/25.
//


import SwiftUIstruct ProblemView: View {    @State private var problemText: String = ""    @StateObject private var skyVM = SkyViewModel()        var body: some View {        ZStack {            // 1. Static star background            StarField(count: 150)            // 2. Shooting star animations            ShootingStarCanvas(vm: skyVM)            // 3. Dark gradient overlay            LinearGradient(                gradient: Gradient(colors: [                    Color(red: 13/255, green: 13/255, blue: 13/255),                    Color(red: 31/255, green: 41/255, blue: 49/255)                ]),                startPoint: .top,                endPoint: .bottom            )            .ignoresSafeArea()            // 4. Main content            VStack(spacing: 32) {                // Header                Text("Whatâ€™s on your mind?")                    .font(.system(size: 28, weight: .semibold))                    .foregroundColor(Color(red: 241/255, green: 239/255, blue: 234/255))                                // Scene card                Image("sceneCard")                    .resizable()                    .aspectRatio(contentMode: .fit)                    .frame(maxWidth: 360)                    .cornerRadius(20)                    .shadow(color: .black.opacity(0.4), radius: 10, x: 0, y: 4)                                // Input + mic pill                HStack {                    TextField("Talk about your problem...", text: $problemText)                        .font(.system(size: 18))                        .foregroundColor(Color(red: 31/255, green: 41/255, blue: 49/255))                                        Button(action: {                        // handle voice input                    }) {                        Image(systemName: "mic.fill")                            .font(.system(size: 20))                            .foregroundColor(Color(red: 31/255, green: 41/255, blue: 49/255))                    }                }                .padding(.vertical, 12)                .padding(.horizontal, 16)                .background(Color(red: 241/255, green: 239/255, blue: 234/255))                .cornerRadius(40)                .frame(maxWidth: 360)                                Spacer()                                // Bottom bar                HStack(spacing: 48) {                    Button(action: {                        // navigate to history                    }) {                        VStack(spacing: 4) {                            Image(systemName: "clock.fill")                                .font(.system(size: 22))                            Text("History")                                .font(.footnote)                        }                        .foregroundColor(Color(red: 241/255, green: 239/255, blue: 234/255))                    }                                        Button(action: {                        // open settings                    }) {                        VStack(spacing: 4) {                            Image(systemName: "gearshape.fill")                                .font(.system(size: 22))                            Text("Settings")                                .font(.footnote)                        }                        .foregroundColor(Color(red: 241/255, green: 239/255, blue: 234/255))                    }                                        Button(action: {                        // toggle incognito mode                    }) {                        VStack(spacing: 4) {                            Image(systemName: "eye.slash.fill")                                .font(.system(size: 22))                            Text("Incognito")                                .font(.footnote)                        }                        .foregroundColor(Color(red: 241/255, green: 239/255, blue: 234/255))                    }                }                .padding(.vertical, 16)                .background(Color.black.opacity(0.3))                .cornerRadius(16)                .padding(.bottom, 16)            }            .padding(.top, 40)        }    }}struct ProblemView_Previews: PreviewProvider {    static var previews: some View {        ProblemView()            .preferredColorScheme(.dark)    }}